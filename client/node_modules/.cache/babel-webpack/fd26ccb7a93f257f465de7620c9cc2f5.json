{"ast":null,"code":"import _asyncToGenerator from \"/home/supruniuk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/EPAM/steam-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { GameItemComponent } from './game-item.component';\ndescribe('GameItemComponent', () => {\n  let component;\n  let userService;\n  let games = [{\n    description: 'description1',\n    id: 'id1',\n    price: 150,\n    tag: ['adventure'],\n    title: 'title1'\n  }, {\n    description: 'description2',\n    id: 'id2',\n    price: 50,\n    tag: ['indie'],\n    title: 'title2'\n  }, {\n    description: 'description3',\n    id: 'id3',\n    price: 100,\n    tag: ['action'],\n    title: 'title3'\n  }, {\n    description: 'description4',\n    id: 'id4',\n    price: 760,\n    tag: ['adventure'],\n    title: 'title4'\n  }];\n  let info = {\n    age: 50,\n    email: 'exmple@gmail.com',\n    friendsList: [],\n    gamesList: [],\n    id: '-MwDFeGzNW8gbGRQicfQ',\n    username: 'test'\n  };\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [GameItemComponent],\n      imports: [HttpClientTestingModule, RouterTestingModule, ReactiveFormsModule]\n    }).compileComponents();\n    userService = TestBed.inject(UserService);\n    component = new GameItemComponent(userService);\n    spyOn(userService, 'getCurrentUserInfo').and.callFake(() => {\n      return info;\n    });\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should set user`s gameList to [] if user didnt save any games', () => {\n    component.ngOnInit();\n    expect(component.user.gamesList).toBe([]);\n  });\n});","map":{"version":3,"sources":["/home/supruniuk/Рабочий стол/EPAM/steam-app/src/app/components/games-page/game-item/game-item.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","ReactiveFormsModule","RouterTestingModule","UserService","GameItemComponent","describe","component","userService","games","description","id","price","tag","title","info","age","email","friendsList","gamesList","username","beforeEach","configureTestingModule","declarations","imports","compileComponents","inject","spyOn","and","callFake","it","expect","toBeTruthy","ngOnInit","user","toBe"],"mappings":";AAAA,SAASA,uBAAT,QAAwC,8BAAxC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACAC,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAChC,MAAIC,SAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,KAAK,GAAG,CACR;AACIC,IAAAA,WAAW,EAAE,cADjB;AAEIC,IAAAA,EAAE,EAAE,KAFR;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,GAAG,EAAE,CAAC,WAAD,CAJT;AAKIC,IAAAA,KAAK,EAAE;AALX,GADQ,EAQR;AACIJ,IAAAA,WAAW,EAAE,cADjB;AAEIC,IAAAA,EAAE,EAAE,KAFR;AAGIC,IAAAA,KAAK,EAAE,EAHX;AAIIC,IAAAA,GAAG,EAAE,CAAC,OAAD,CAJT;AAKIC,IAAAA,KAAK,EAAE;AALX,GARQ,EAeR;AACIJ,IAAAA,WAAW,EAAE,cADjB;AAEIC,IAAAA,EAAE,EAAE,KAFR;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,GAAG,EAAE,CAAC,QAAD,CAJT;AAKIC,IAAAA,KAAK,EAAE;AALX,GAfQ,EAsBR;AACIJ,IAAAA,WAAW,EAAE,cADjB;AAEIC,IAAAA,EAAE,EAAE,KAFR;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,GAAG,EAAE,CAAC,WAAD,CAJT;AAKIC,IAAAA,KAAK,EAAE;AALX,GAtBQ,CAAZ;AA8BA,MAAIC,IAAI,GAAG;AACPC,IAAAA,GAAG,EAAE,EADE;AAEPC,IAAAA,KAAK,EAAE,kBAFA;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIPC,IAAAA,SAAS,EAAE,EAJJ;AAKPR,IAAAA,EAAE,EAAE,sBALG;AAMPS,IAAAA,QAAQ,EAAE;AANH,GAAX;AAQAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMpB,OAAO,CAACqB,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAAClB,iBAAD,CADmB;AAEjCmB,MAAAA,OAAO,EAAE,CACLxB,uBADK,EAELG,mBAFK,EAGLD,mBAHK;AAFwB,KAA/B,EAOHuB,iBAPG,EAAN;AAQAjB,IAAAA,WAAW,GAAGP,OAAO,CAACyB,MAAR,CAAetB,WAAf,CAAd;AACAG,IAAAA,SAAS,GAAG,IAAIF,iBAAJ,CAAsBG,WAAtB,CAAZ;AACAmB,IAAAA,KAAK,CAACnB,WAAD,EAAc,oBAAd,CAAL,CAAyCoB,GAAzC,CAA6CC,QAA7C,CAAsD,MAAM;AACxD,aAAOd,IAAP;AACH,KAFD;AAGH,GAdS,EAAV;AAeAe,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACxB,SAAD,CAAN,CAAkByB,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,+DAAD,EAAkE,MAAM;AACtEvB,IAAAA,SAAS,CAAC0B,QAAV;AACAF,IAAAA,MAAM,CAACxB,SAAS,CAAC2B,IAAV,CAAef,SAAhB,CAAN,CAAiCgB,IAAjC,CAAsC,EAAtC;AACH,GAHC,CAAF;AAIH,CA/DO,CAAR","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { GameItemComponent } from './game-item.component';\ndescribe('GameItemComponent', () => {\n    let component;\n    let userService;\n    let games = [\n        {\n            description: 'description1',\n            id: 'id1',\n            price: 150,\n            tag: ['adventure'],\n            title: 'title1',\n        },\n        {\n            description: 'description2',\n            id: 'id2',\n            price: 50,\n            tag: ['indie'],\n            title: 'title2',\n        },\n        {\n            description: 'description3',\n            id: 'id3',\n            price: 100,\n            tag: ['action'],\n            title: 'title3',\n        },\n        {\n            description: 'description4',\n            id: 'id4',\n            price: 760,\n            tag: ['adventure'],\n            title: 'title4',\n        },\n    ];\n    let info = {\n        age: 50,\n        email: 'exmple@gmail.com',\n        friendsList: [],\n        gamesList: [],\n        id: '-MwDFeGzNW8gbGRQicfQ',\n        username: 'test',\n    };\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [GameItemComponent],\n            imports: [\n                HttpClientTestingModule,\n                RouterTestingModule,\n                ReactiveFormsModule,\n            ],\n        }).compileComponents();\n        userService = TestBed.inject(UserService);\n        component = new GameItemComponent(userService);\n        spyOn(userService, 'getCurrentUserInfo').and.callFake(() => {\n            return info;\n        });\n    });\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should set user`s gameList to [] if user didnt save any games', () => {\n        component.ngOnInit();\n        expect(component.user.gamesList).toBe([]);\n    });\n});\n"]},"metadata":{},"sourceType":"module"}