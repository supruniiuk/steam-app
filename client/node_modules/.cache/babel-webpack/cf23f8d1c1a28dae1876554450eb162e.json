{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction LoginPageComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r3 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r3, \" \");\n  }\n}\n\nfunction LoginPageComponent_div_11_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \" Field \\\"email\\\" can not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPageComponent_div_11_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \" Enter correct email \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPageComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginPageComponent_div_11_small_1_Template, 2, 0, \"small\", 12);\n    i0.ɵɵtemplate(2, LoginPageComponent_div_11_small_2_Template, 2, 0, \"small\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.get(\"email\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.get(\"email\").errors.email);\n  }\n}\n\nfunction LoginPageComponent_div_16_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1, \" Password can not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginPageComponent_div_16_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Password must be at least \", ctx_r7.loginForm.get(\"password\").errors.minlength.requiredLength, \" symbols. \");\n  }\n}\n\nfunction LoginPageComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginPageComponent_div_16_small_1_Template, 2, 0, \"small\", 12);\n    i0.ɵɵtemplate(2, LoginPageComponent_div_16_small_2_Template, 2, 1, \"small\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginForm.get(\"password\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginForm.get(\"password\").errors.minlength);\n  }\n}\n\nexport let LoginPageComponent = /*#__PURE__*/(() => {\n  class LoginPageComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.subs = [];\n      this.loginForm = new FormGroup({\n        email: new FormControl('', [Validators.email, Validators.required]),\n        password: new FormControl('', [Validators.required, Validators.minLength(6)])\n      });\n    }\n\n    ngOnInit() {\n      if (this.authService.isAuthenticated) {\n        this.router.navigate(['/games']);\n      }\n\n      const errorSubscription = this.authService.error$.subscribe({\n        next: v => this.loginForm.controls['password'].setValue('')\n      });\n      this.subs.push(errorSubscription);\n    }\n\n    login() {\n      this.isSubmited = false;\n\n      if (this.loginForm.invalid) {\n        return;\n      }\n\n      const user = {\n        email: this.loginForm.value.email,\n        password: this.loginForm.value.password\n      };\n      const loginSubsriber = this.authService.login(user).subscribe(() => {\n        this.isSubmited = true;\n        this.loginForm.reset();\n        this.router.navigate(['/games']);\n      });\n      this.subs.push(loginSubsriber);\n    }\n\n    registration() {\n      this.isSubmited = false;\n\n      if (this.loginForm.invalid) {\n        return;\n      }\n\n      const user = {\n        email: this.loginForm.value.email,\n        password: this.loginForm.value.password\n      };\n      const registrationSubscriber = this.authService.registration(user).subscribe(() => {\n        this.isSubmited = true;\n        this.loginForm.reset();\n        this.router.navigate(['/games']);\n      });\n      this.subs.push(registrationSubscriber);\n    }\n\n    isBtnDisabled() {\n      return this.loginForm.invalid || this.isSubmited;\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n  }\n\n  LoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  LoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"app-login-page\"]],\n    decls: 21,\n    vars: 8,\n    consts: [[1, \"profile\", \"center-block\"], [1, \"custom-container\", \"bg-light\", \"p-5\"], [1, \"heading-custom\", \"text-center\", \"pb-2\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"user-info\", 3, \"formGroup\"], [1, \"form-group\"], [\"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [1, \"btn\", \"btn-purple\", \"custom-shadow\", \"mb-3\", 3, \"disabled\", \"click\"], [1, \"btn\", \"btn-purple\", \"custom-shadow\", 3, \"disabled\", \"click\"], [1, \"alert\", \"alert-danger\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"p\", 2);\n        i0.ɵɵtext(3, \"Sign in\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, LoginPageComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementStart(6, \"form\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"label\");\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵtemplate(11, LoginPageComponent_div_11_Template, 3, 2, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵelementStart(13, \"label\");\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵtemplate(16, LoginPageComponent_div_16_Template, 3, 2, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function LoginPageComponent_Template_button_click_17_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(18, \" Sign in \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function LoginPageComponent_Template_button_click_19_listener() {\n          return ctx.registration();\n        });\n        i0.ɵɵtext(20, \" Sign up \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 6, ctx.authService.error$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").invalid && ctx.loginForm.get(\"email\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").invalid && ctx.loginForm.get(\"password\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isBtnDisabled());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.isBtnDisabled());\n      }\n    },\n    directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName],\n    pipes: [i3.AsyncPipe],\n    styles: [\".custom-container[_ngcontent-%COMP%]{max-width:30%;min-height:-moz-fit-content;min-height:fit-content}.user-info[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{width:100%}@media screen and (max-width: 1200px){.custom-container[_ngcontent-%COMP%]{max-width:40%}}@media screen and (max-width: 992px){.custom-container[_ngcontent-%COMP%]{max-width:50%}}@media screen and (max-width: 630px){.custom-container[_ngcontent-%COMP%]{max-width:70%}}\"]\n  });\n  return LoginPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}