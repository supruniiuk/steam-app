{"ast":null,"code":"import _asyncToGenerator from \"/home/supruniuk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/EPAM/steam-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { EMPTY } from 'rxjs';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { FriendsPageComponent } from './friends-page.component';\ndescribe('FriendsPageComponent', () => {\n  let component;\n  let userService;\n  let info = {\n    age: 50,\n    email: 'exmple@gmail.com',\n    friendsList: [{\n      email: 'bcd@gmail.com',\n      id: '-MwDEvoJA0MuEMAwUPLu'\n    }, {\n      email: 'ijkl@gmail.com',\n      id: '-MwDFYPchUDxdD9rcHze'\n    }],\n    gamesList: [{\n      id: 'id1'\n    }],\n    id: '-MwDFeGzNW8gbGRQicfQ',\n    username: 'test'\n  };\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [FriendsPageComponent],\n      imports: [HttpClientTestingModule, RouterTestingModule, ReactiveFormsModule]\n    }).compileComponents();\n    userService = TestBed.inject(UserService);\n    component = new FriendsPageComponent(userService);\n    spyOn(userService, 'getCurrentUserInfo').and.callFake(() => {\n      return info;\n    });\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('calls getAllUsers when ngOnInit', () => {\n    const spy = spyOn(userService, 'getAllUsers').and.callFake(() => {\n      return EMPTY;\n    });\n    component.ngOnInit();\n    expect(spy).toHaveBeenCalled();\n  });\n  it('remove friend', () => {\n    let exFriend = {\n      id: '-MwDErAZp7iK98goW2PU',\n      email: 'abc@gmail.com'\n    };\n    let friends = [{\n      email: 'bcd@gmail.com',\n      id: '-MwDEvoJA0MuEMAwUPLu'\n    }, {\n      email: 'ijkl@gmail.com',\n      id: '-MwDFYPchUDxdD9rcHze'\n    }];\n    component.ngOnInit();\n    component.remove(exFriend);\n    expect(component.friendsList.length).toEqual(friends.length);\n  });\n  it('add friend', () => {\n    let newFriend = {\n      id: '-MwDErAZp7iK98goW2PU',\n      email: 'abc@gmail.com'\n    };\n    let friends = [{\n      id: '-MwDErAZp7iK98goW2PU',\n      email: 'abc@gmail.com'\n    }, {\n      email: 'bcd@gmail.com',\n      id: '-MwDEvoJA0MuEMAwUPLu'\n    }, {\n      email: 'ijkl@gmail.com',\n      id: '-MwDFYPchUDxdD9rcHze'\n    }];\n    component.ngOnInit();\n    component.add(newFriend);\n    expect(component.friendsList.length).toEqual(friends.length);\n  });\n});","map":{"version":3,"sources":["/home/supruniuk/Рабочий стол/EPAM/steam-app/src/app/components/friends-page/friends-page.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","ReactiveFormsModule","RouterTestingModule","EMPTY","UserService","FriendsPageComponent","describe","component","userService","info","age","email","friendsList","id","gamesList","username","beforeEach","configureTestingModule","declarations","imports","compileComponents","inject","spyOn","and","callFake","it","expect","toBeTruthy","spy","ngOnInit","toHaveBeenCalled","exFriend","friends","remove","length","toEqual","newFriend","add"],"mappings":"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","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { EMPTY } from 'rxjs';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { FriendsPageComponent } from './friends-page.component';\ndescribe('FriendsPageComponent', () => {\n    let component;\n    let userService;\n    let info = {\n        age: 50,\n        email: 'exmple@gmail.com',\n        friendsList: [\n            { email: 'bcd@gmail.com', id: '-MwDEvoJA0MuEMAwUPLu' },\n            { email: 'ijkl@gmail.com', id: '-MwDFYPchUDxdD9rcHze' },\n        ],\n        gamesList: [{ id: 'id1' }],\n        id: '-MwDFeGzNW8gbGRQicfQ',\n        username: 'test',\n    };\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [FriendsPageComponent],\n            imports: [\n                HttpClientTestingModule,\n                RouterTestingModule,\n                ReactiveFormsModule,\n            ],\n        }).compileComponents();\n        userService = TestBed.inject(UserService);\n        component = new FriendsPageComponent(userService);\n        spyOn(userService, 'getCurrentUserInfo').and.callFake(() => {\n            return info;\n        });\n    });\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('calls getAllUsers when ngOnInit', () => {\n        const spy = spyOn(userService, 'getAllUsers').and.callFake(() => {\n            return EMPTY;\n        });\n        component.ngOnInit();\n        expect(spy).toHaveBeenCalled();\n    });\n    it('remove friend', () => {\n        let exFriend = { id: '-MwDErAZp7iK98goW2PU', email: 'abc@gmail.com' };\n        let friends = [\n            { email: 'bcd@gmail.com', id: '-MwDEvoJA0MuEMAwUPLu' },\n            { email: 'ijkl@gmail.com', id: '-MwDFYPchUDxdD9rcHze' },\n        ];\n        component.ngOnInit();\n        component.remove(exFriend);\n        expect(component.friendsList.length).toEqual(friends.length);\n    });\n    it('add friend', () => {\n        let newFriend = { id: '-MwDErAZp7iK98goW2PU', email: 'abc@gmail.com' };\n        let friends = [\n            { id: '-MwDErAZp7iK98goW2PU', email: 'abc@gmail.com' },\n            { email: 'bcd@gmail.com', id: '-MwDEvoJA0MuEMAwUPLu' },\n            { email: 'ijkl@gmail.com', id: '-MwDFYPchUDxdD9rcHze' },\n        ];\n        component.ngOnInit();\n        component.add(newFriend);\n        expect(component.friendsList.length).toEqual(friends.length);\n    });\n});\n"]},"metadata":{},"sourceType":"module"}