{"ast":null,"code":"import _asyncToGenerator from \"/home/supruniuk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/EPAM/steam-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { EMPTY } from 'rxjs';\nimport 'rxjs/add/observable/of';\nimport { GameService } from 'src/app/shared/services/games.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { LibraryPageComponent } from './library-page.component';\ndescribe('LibraryPageComponent', () => {\n  let component;\n  let userService;\n  let gameService;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [LibraryPageComponent],\n      imports: [HttpClientTestingModule]\n    }).compileComponents();\n    const info = {\n      age: 50,\n      email: 'example@gmail.com',\n      friendsList: [],\n      gamesList: [],\n      username: 'name',\n      id: '-id'\n    };\n    userService = TestBed.inject(UserService);\n    gameService = TestBed.inject(GameService);\n    component = new LibraryPageComponent(gameService, userService);\n    localStorage.setItem('userInfo', JSON.stringify(info));\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should call getAllGames when ngOnInit', () => {\n    const spy = spyOn(gameService, 'getAllGames').and.callFake(() => {\n      return EMPTY;\n    });\n    component.ngOnInit();\n    expect(spy).toHaveBeenCalled();\n  });\n  it('should set gamesList to [] if user doesnt have saved games', () => {\n    component.ngOnInit();\n    expect(component.user.friendsList).toBe([]);\n  });\n  it('should change response structure of games', () => {\n    const games = {\n      '-id1': {\n        description: 'description1',\n        price: 150,\n        tag: ['adventure'],\n        title: 'title1'\n      },\n      '-id2': {\n        description: 'description2',\n        price: 100,\n        tag: ['adventure'],\n        title: 'title2'\n      },\n      '-id3': {\n        description: 'description3',\n        price: 50,\n        tag: ['adventure'],\n        title: 'title3'\n      }\n    };\n    const spy = spyOn(gameService, 'getAllGames').and.returnValue(Observable.of(games));\n    component.ngOnInit();\n    expect(spy).toHaveBeenCalled();\n  });\n});","map":{"version":3,"sources":["/home/supruniuk/Рабочий стол/EPAM/steam-app/src/app/components/library-page/library-page.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","EMPTY","GameService","UserService","LibraryPageComponent","describe","component","userService","gameService","beforeEach","configureTestingModule","declarations","imports","compileComponents","info","age","email","friendsList","gamesList","username","id","inject","localStorage","setItem","JSON","stringify","it","expect","toBeTruthy","spy","spyOn","and","callFake","ngOnInit","toHaveBeenCalled","user","toBe","games","description","price","tag","title","returnValue","Observable","of"],"mappings":"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","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { EMPTY } from 'rxjs';\nimport 'rxjs/add/observable/of';\nimport { GameService } from 'src/app/shared/services/games.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { LibraryPageComponent } from './library-page.component';\ndescribe('LibraryPageComponent', () => {\n    let component;\n    let userService;\n    let gameService;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [LibraryPageComponent],\n            imports: [HttpClientTestingModule],\n        }).compileComponents();\n        const info = {\n            age: 50,\n            email: 'example@gmail.com',\n            friendsList: [],\n            gamesList: [],\n            username: 'name',\n            id: '-id',\n        };\n        userService = TestBed.inject(UserService);\n        gameService = TestBed.inject(GameService);\n        component = new LibraryPageComponent(gameService, userService);\n        localStorage.setItem('userInfo', JSON.stringify(info));\n    });\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should call getAllGames when ngOnInit', () => {\n        const spy = spyOn(gameService, 'getAllGames').and.callFake(() => {\n            return EMPTY;\n        });\n        component.ngOnInit();\n        expect(spy).toHaveBeenCalled();\n    });\n    it('should set gamesList to [] if user doesnt have saved games', () => {\n        component.ngOnInit();\n        expect(component.user.friendsList).toBe([]);\n    });\n    it('should change response structure of games', () => {\n        const games = {\n            '-id1': {\n                description: 'description1',\n                price: 150,\n                tag: ['adventure'],\n                title: 'title1',\n            },\n            '-id2': {\n                description: 'description2',\n                price: 100,\n                tag: ['adventure'],\n                title: 'title2',\n            },\n            '-id3': {\n                description: 'description3',\n                price: 50,\n                tag: ['adventure'],\n                title: 'title3',\n            },\n        };\n        const spy = spyOn(gameService, 'getAllGames').and.returnValue(Observable.of(games));\n        component.ngOnInit();\n        expect(spy).toHaveBeenCalled();\n    });\n});\n"]},"metadata":{},"sourceType":"module"}