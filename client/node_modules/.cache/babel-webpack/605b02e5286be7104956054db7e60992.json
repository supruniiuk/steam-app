{"ast":null,"code":"import _asyncToGenerator from \"/home/supruniuk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/EPAM/steam-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { EMPTY } from 'rxjs';\nimport { GameService } from 'src/app/shared/services/games.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { LibraryPageComponent } from './library-page.component';\ndescribe('LibraryPageComponent', () => {\n  let component;\n  let userService;\n  let gameService;\n  let games = [{\n    description: 'description1',\n    price: 150,\n    tag: ['adventure'],\n    title: 'title1',\n    id: '-id1'\n  }, {\n    description: 'description2',\n    price: 100,\n    tag: ['adventure'],\n    title: 'title2',\n    id: '-id2'\n  }, {\n    description: 'description3',\n    price: 50,\n    tag: ['adventure'],\n    title: 'title3',\n    id: '-id3'\n  }];\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [LibraryPageComponent],\n      imports: [HttpClientTestingModule]\n    }).compileComponents();\n    const info = {\n      age: 50,\n      email: 'example@gmail.com',\n      friendsList: [],\n      gamesList: [],\n      username: 'name',\n      id: '-id'\n    };\n    userService = TestBed.inject(UserService);\n    gameService = TestBed.inject(GameService);\n    component = new LibraryPageComponent(gameService, userService);\n    localStorage.setItem('userInfo', JSON.stringify(info));\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should call getAllGames when ngOnInit', () => {\n    const spy = spyOn(gameService, 'getAllGames').and.callFake(() => {\n      return EMPTY;\n    });\n    component.ngOnInit();\n    expect(spy).toHaveBeenCalled();\n  });\n  /* it('should set gamesList to [] if user doesnt have saved games', () => {\n    component.ngOnInit();\n    expect(component.user.gamesList).toEqual([]);\n  });*/\n\n  it('should filter games', () => {\n    component.ngOnInit();\n    component.allGames = games;\n    component.user.gamesList = [{\n      id: '-id3'\n    }];\n    component.filterGames();\n    expect(component.gamesList).toBe([games[3]]);\n  });\n});","map":{"version":3,"sources":["/home/supruniuk/Рабочий стол/EPAM/steam-app/src/app/components/library-page/library-page.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","EMPTY","GameService","UserService","LibraryPageComponent","describe","component","userService","gameService","games","description","price","tag","title","id","beforeEach","configureTestingModule","declarations","imports","compileComponents","info","age","email","friendsList","gamesList","username","inject","localStorage","setItem","JSON","stringify","it","expect","toBeTruthy","spy","spyOn","and","callFake","ngOnInit","toHaveBeenCalled","allGames","user","filterGames","toBe"],"mappings":"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","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { EMPTY } from 'rxjs';\nimport { GameService } from 'src/app/shared/services/games.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { LibraryPageComponent } from './library-page.component';\ndescribe('LibraryPageComponent', () => {\n    let component;\n    let userService;\n    let gameService;\n    let games = [\n        {\n            description: 'description1',\n            price: 150,\n            tag: ['adventure'],\n            title: 'title1',\n            id: '-id1',\n        },\n        {\n            description: 'description2',\n            price: 100,\n            tag: ['adventure'],\n            title: 'title2',\n            id: '-id2',\n        },\n        {\n            description: 'description3',\n            price: 50,\n            tag: ['adventure'],\n            title: 'title3',\n            id: '-id3',\n        },\n    ];\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [LibraryPageComponent],\n            imports: [HttpClientTestingModule],\n        }).compileComponents();\n        const info = {\n            age: 50,\n            email: 'example@gmail.com',\n            friendsList: [],\n            gamesList: [],\n            username: 'name',\n            id: '-id',\n        };\n        userService = TestBed.inject(UserService);\n        gameService = TestBed.inject(GameService);\n        component = new LibraryPageComponent(gameService, userService);\n        localStorage.setItem('userInfo', JSON.stringify(info));\n    });\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should call getAllGames when ngOnInit', () => {\n        const spy = spyOn(gameService, 'getAllGames').and.callFake(() => {\n            return EMPTY;\n        });\n        component.ngOnInit();\n        expect(spy).toHaveBeenCalled();\n    });\n    /* it('should set gamesList to [] if user doesnt have saved games', () => {\n      component.ngOnInit();\n      expect(component.user.gamesList).toEqual([]);\n    });*/\n    it('should filter games', () => {\n        component.ngOnInit();\n        component.allGames = games;\n        component.user.gamesList = [{ id: '-id3' }];\n        component.filterGames();\n        expect(component.gamesList).toBe([games[3]]);\n    });\n});\n"]},"metadata":{},"sourceType":"module"}