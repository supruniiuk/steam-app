{"ast":null,"code":"import _asyncToGenerator from \"/home/supruniuk/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/EPAM/steam-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { EMPTY } from 'rxjs';\nimport { GameService } from 'src/app/shared/services/games.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { LibraryPageComponent } from './library-page.component';\ndescribe('LibraryPageComponent', () => {\n  let component;\n  let gameService;\n  let userService;\n  let info = {\n    age: 50,\n    email: 'exmple@gmail.com',\n    friendsList: [],\n    gamesList: [{\n      id: 'id1'\n    }],\n    id: '-MwDFeGzNW8gbGRQicfQ',\n    username: 'test'\n  };\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [LibraryPageComponent],\n      imports: [HttpClientTestingModule, RouterTestingModule, ReactiveFormsModule]\n    }).compileComponents();\n    userService = TestBed.inject(UserService);\n    gameService = TestBed.inject(GameService);\n    component = new LibraryPageComponent(gameService, userService);\n    spyOn(userService, 'getCurrentUserInfo').and.callFake(() => {\n      return info;\n    });\n  }));\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should call getAllGames when ngOnInit', () => {\n    const spy = spyOn(gameService, 'getAllGames').and.callFake(() => {\n      return EMPTY;\n    });\n    component.ngOnInit();\n    expect(spy).toHaveBeenCalled();\n  });\n  it('should filter games', () => {\n    component.user.gamesList = [{\n      id: 'id1'\n    }, {\n      id: 'id2'\n    }, {\n      id: 'id3'\n    }];\n    component.ngOnInit();\n    expect(spy).toHaveBeenCalled();\n  });\n});","map":{"version":3,"sources":["/home/supruniuk/Рабочий стол/EPAM/steam-app/src/app/components/library-page/library-page.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","ReactiveFormsModule","RouterTestingModule","EMPTY","GameService","UserService","LibraryPageComponent","describe","component","gameService","userService","info","age","email","friendsList","gamesList","id","username","beforeEach","configureTestingModule","declarations","imports","compileComponents","inject","spyOn","and","callFake","it","expect","toBeTruthy","spy","ngOnInit","toHaveBeenCalled","user"],"mappings":";AAAA,SAASA,uBAAT,QAAwC,8BAAxC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,WAAT,QAA4B,uCAA5B;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACAC,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACnC,MAAIC,SAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,IAAI,GAAG;AACPC,IAAAA,GAAG,EAAE,EADE;AAEPC,IAAAA,KAAK,EAAE,kBAFA;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIPC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAD,CAJJ;AAKPA,IAAAA,EAAE,EAAE,sBALG;AAMPC,IAAAA,QAAQ,EAAE;AANH,GAAX;AAQAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMlB,OAAO,CAACmB,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACd,oBAAD,CADmB;AAEjCe,MAAAA,OAAO,EAAE,CACLtB,uBADK,EAELG,mBAFK,EAGLD,mBAHK;AAFwB,KAA/B,EAOHqB,iBAPG,EAAN;AAQAZ,IAAAA,WAAW,GAAGV,OAAO,CAACuB,MAAR,CAAelB,WAAf,CAAd;AACAI,IAAAA,WAAW,GAAGT,OAAO,CAACuB,MAAR,CAAenB,WAAf,CAAd;AACAI,IAAAA,SAAS,GAAG,IAAIF,oBAAJ,CAAyBG,WAAzB,EAAsCC,WAAtC,CAAZ;AACAc,IAAAA,KAAK,CAACd,WAAD,EAAc,oBAAd,CAAL,CAAyCe,GAAzC,CAA6CC,QAA7C,CAAsD,MAAM;AACxD,aAAOf,IAAP;AACH,KAFD;AAGH,GAfS,EAAV;AAgBAgB,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACpB,SAAD,CAAN,CAAkBqB,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,uCAAD,EAA0C,MAAM;AAC9C,UAAMG,GAAG,GAAGN,KAAK,CAACf,WAAD,EAAc,aAAd,CAAL,CAAkCgB,GAAlC,CAAsCC,QAAtC,CAA+C,MAAM;AAC7D,aAAOvB,KAAP;AACH,KAFW,CAAZ;AAGAK,IAAAA,SAAS,CAACuB,QAAV;AACAH,IAAAA,MAAM,CAACE,GAAD,CAAN,CAAYE,gBAAZ;AACH,GANC,CAAF;AAOAL,EAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC5BnB,IAAAA,SAAS,CAACyB,IAAV,CAAelB,SAAf,GAA2B,CAAC;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAD,EAAgB;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAAhB,EAA+B;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAA/B,CAA3B;AACAR,IAAAA,SAAS,CAACuB,QAAV;AACAH,IAAAA,MAAM,CAACE,GAAD,CAAN,CAAYE,gBAAZ;AACH,GAJC,CAAF;AAKH,CA3CO,CAAR","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { EMPTY } from 'rxjs';\nimport { GameService } from 'src/app/shared/services/games.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { LibraryPageComponent } from './library-page.component';\ndescribe('LibraryPageComponent', () => {\n    let component;\n    let gameService;\n    let userService;\n    let info = {\n        age: 50,\n        email: 'exmple@gmail.com',\n        friendsList: [],\n        gamesList: [{ id: 'id1' }],\n        id: '-MwDFeGzNW8gbGRQicfQ',\n        username: 'test',\n    };\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [LibraryPageComponent],\n            imports: [\n                HttpClientTestingModule,\n                RouterTestingModule,\n                ReactiveFormsModule,\n            ],\n        }).compileComponents();\n        userService = TestBed.inject(UserService);\n        gameService = TestBed.inject(GameService);\n        component = new LibraryPageComponent(gameService, userService);\n        spyOn(userService, 'getCurrentUserInfo').and.callFake(() => {\n            return info;\n        });\n    });\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should call getAllGames when ngOnInit', () => {\n        const spy = spyOn(gameService, 'getAllGames').and.callFake(() => {\n            return EMPTY;\n        });\n        component.ngOnInit();\n        expect(spy).toHaveBeenCalled();\n    });\n    it('should filter games', () => {\n        component.user.gamesList = [{ id: 'id1' }, { id: 'id2' }, { id: 'id3' }];\n        component.ngOnInit();\n        expect(spy).toHaveBeenCalled();\n    });\n});\n"]},"metadata":{},"sourceType":"module"}